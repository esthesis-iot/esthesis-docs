{"objectID":"_resources_vs_system_resources.html#service_module_structure","parent":"_resources_vs_system_resources.html#service_module_structure","pageViews":0,"url":"writerside-documentation/resources-vs-system-resources.html#service-module-structure","mainTitle":"Resources vs System Resources","product":"","headings":"Resources vs System Resources,Service module structure","content":"Before we delve into the details, we should first have a basic understanding of the structure of an esthesis service:\n- Client module: The client module defines the client interface of the service. It is the only module that is exposed to the outside world, and it is the only module that can be imported by other services. - Impl module: The impl module provides the implementation of the client module. This module should never be imported by other services. The client module of each service is kind of \u0026quot;special\u0026quot;, as it is annotated with Quarkus\u0027 @RegisterRestClient annotation. This annotation tells Quarkus to generate a REST client for the service which can then be injected into other services. This way we get a \u0026quot;free\u0026quot; client for each service that does not need any additional maintenance as the service evolves.\n","pageTitle":"Service module structure","metaDescription":"","type":"Documentation","breadcrumbs":"Developers Guide","root":0,"depth":1}