{"objectID":"_inter_service_notifications.html#standardising_components_and_actions","parent":"_inter_service_notifications.html#standardising_components_and_actions","pageViews":0,"url":"writerside-documentation/inter-service-notifications.html#standardising-components-and-actions","mainTitle":"Inter-service notifications","product":"","headings":"Inter-service notifications,Standardising components and actions","content":"The names of the components that can participate in the notification mechanism are defined in KafkaNotificationsConstants.java file. This class is always work in progress, as we keep adding components and event types to it, so if the component, or action, you are working with is not included, you can extend it appropriately.\nThere are three different enum classes that you can extend:\n2. Component: This class defines the components that can participate in the notification mechanism. You should add a new entry representing your component. 4. Subject: This class defines the subject of the component being targeted by the message. For example, the Device component may publish messages with different subjects to represent the different types of the underlying object types it manages. For most components, the Subject name will be the same as the Component name, especially considering the narrow scope of each microservice in esthesis CORE. 6. Action: This class defines the action that was performed which triggered the message. Try to reuse the existing actions and only define new action types when absolutely necessary. ","pageTitle":"Standardising components and actions","metaDescription":"","type":"Documentation","breadcrumbs":"Developers Guide","root":0,"depth":1}