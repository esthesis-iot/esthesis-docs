{"objectID":"_working_with_a_private_container_registry.html#using_the_private_registry_in_testing_a_production_like_installation","parent":"_working_with_a_private_container_registry.html#building_and_pushing_images","pageViews":0,"url":"writerside-documentation/working-with-a-private-container-registry.html#using-the-private-registry-in-testing-a-production-like-installation","mainTitle":"Working with a private Container Registry","product":"","headings":"Working with a private Container Registry,Using the private registry in testing a production-like installation","content":"When testing a production-like installation, you can configure the Helm charts to use the images from your private registry instead of e.g. Docker Hub. To do so, you can define the ESTHESIS_REGISTRY_URL environment variable to point to the private registry. This variable should point to the IP address, port, and user/project name of your private registry, for example:\nESTHESIS_REGISTRY_URL\u003d192.168.50.211:5000/esthesis helmfile sync -n esthesis\n2. When using the Helm charts without the -env dev flag, the charts will automatically use multi-node deployments. If you are testing in a single-node Kubernetes cluster, you need to also define ESTHESIS_SINGLE_NODE\u003dtrue environmental variable.\n4. If you want to use the Helm charts, locally available to your machine, while still deploying a production-level setup, you can use the ESTHESIS_LOCAL_CHARTS\u003dtrue environmental variable.\n6. If while working with a private you are also deploying on a Kubernetes cluster thart does not have access to proper certificates, you can also set OIDC_TLS_VERIFICATION\u003dnone while deploying the Helm charts.\n","pageTitle":"Using the private registry in testing a production-like installation","metaDescription":"","type":"Documentation","breadcrumbs":"Developers Guide","root":0,"depth":1}